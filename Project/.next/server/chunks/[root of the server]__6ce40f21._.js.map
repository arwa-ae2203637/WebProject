{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/models/user.js"],"sourcesContent":["import { customAlphabet } from \"nanoid\";\n\nexport class User{\n  #id;\n  #firstName;\n  #lastName;\n  #username;\n  #password;\n  #userType;\n\n  constructor(obj){\n    if(this.constructor === User){\n      throw new Error(\"Can't instantiate abstract class\");\n    }\n    this.#id = obj.id ?? User.generateId(this.#userType);\n    this.#firstName = obj?.firstName ?? \"\";\n    this.#lastName = obj?.lastName ?? \"\";\n    this.#username = obj?.username ?? \"\";\n    this.#password = obj?.password ?? \"\";\n    this.#userType = obj?.userType ?? \"\";\n  }\n\n  // SETTERS AND GETTERS\n  get id(){\n    return this.#id;\n  }\n  get firstName(){\n    return this.#firstName;\n  }\n  get lastName(){\n    return this.#lastName;\n  }\n  get username(){\n    return this.#username;\n  }\n  get password(){\n    return this.#password;\n  }\n  get userType(){\n    return this.#userType;\n  }\n  set firstName(firstName){\n    this.#firstName = firstName;\n  }\n  set lastName(lastName){\n    this.#lastName = lastName;\n  }\n  set username(username){\n    this.#username = username;\n  }\n  set password(password){\n    this.#password = password;\n  }\n  set userType(userType){\n    this.#userType = userType;\n  }\n\n  // GENERATE USER ID\n  static generateId(userType) {\n    const numId = customAlphabet('0123456789', 8);\n    if (userType == \"admin\") return `ADMIN-${numId()}`;\n    else if (userType == \"student\") return `STUD-${numId()}`;\n    else return `INST-${numId()}`;\n  };\n\n\n  // static fromJSON(json){\n  //   const object = typeof json === \"string\" ? JSON.parse(json) : json; \n  //   return new User(object);\n  // }\n\n  static fromJSON(json){\n    // const object = typeof json === \"string\" ? JSON.parse(json) : json; \n    // return new User(object);\n    throw new Error(\"Abstract method 'fromJSON()' must be implemented in a subclass\");\n  }\n\n\n  toJSON(){\n    return {\n      id: this.#id,\n      firstName: this.#firstName,\n      lastName: this.#lastName,\n      username: this.#username,\n      password: this.#password,\n      userType: this.#userType\n    };\n  }\n\n  toString() {\n    return `UserType: ${this.#userType}\n            ID: ${this.#id}, \n            FirstName: ${this.#firstName}, \n            LastName: ${this.#lastName},\n            username: ${this.#username},`;\n  }\n  \n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM;IACX,CAAA,EAAG,CAAC;IACJ,CAAA,SAAU,CAAC;IACX,CAAA,QAAS,CAAC;IACV,CAAA,QAAS,CAAC;IACV,CAAA,QAAS,CAAC;IACV,CAAA,QAAS,CAAC;IAEV,YAAY,GAAG,CAAC;QACd,IAAG,IAAI,CAAC,WAAW,KAAK,MAAK;YAC3B,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,CAAA,EAAG,GAAG,IAAI,EAAE,IAAI,KAAK,UAAU,CAAC,IAAI,CAAC,CAAA,QAAS;QACnD,IAAI,CAAC,CAAA,SAAU,GAAG,KAAK,aAAa;QACpC,IAAI,CAAC,CAAA,QAAS,GAAG,KAAK,YAAY;QAClC,IAAI,CAAC,CAAA,QAAS,GAAG,KAAK,YAAY;QAClC,IAAI,CAAC,CAAA,QAAS,GAAG,KAAK,YAAY;QAClC,IAAI,CAAC,CAAA,QAAS,GAAG,KAAK,YAAY;IACpC;IAEA,sBAAsB;IACtB,IAAI,KAAI;QACN,OAAO,IAAI,CAAC,CAAA,EAAG;IACjB;IACA,IAAI,YAAW;QACb,OAAO,IAAI,CAAC,CAAA,SAAU;IACxB;IACA,IAAI,WAAU;QACZ,OAAO,IAAI,CAAC,CAAA,QAAS;IACvB;IACA,IAAI,WAAU;QACZ,OAAO,IAAI,CAAC,CAAA,QAAS;IACvB;IACA,IAAI,WAAU;QACZ,OAAO,IAAI,CAAC,CAAA,QAAS;IACvB;IACA,IAAI,WAAU;QACZ,OAAO,IAAI,CAAC,CAAA,QAAS;IACvB;IACA,IAAI,UAAU,SAAS,EAAC;QACtB,IAAI,CAAC,CAAA,SAAU,GAAG;IACpB;IACA,IAAI,SAAS,QAAQ,EAAC;QACpB,IAAI,CAAC,CAAA,QAAS,GAAG;IACnB;IACA,IAAI,SAAS,QAAQ,EAAC;QACpB,IAAI,CAAC,CAAA,QAAS,GAAG;IACnB;IACA,IAAI,SAAS,QAAQ,EAAC;QACpB,IAAI,CAAC,CAAA,QAAS,GAAG;IACnB;IACA,IAAI,SAAS,QAAQ,EAAC;QACpB,IAAI,CAAC,CAAA,QAAS,GAAG;IACnB;IAEA,mBAAmB;IACnB,OAAO,WAAW,QAAQ,EAAE;QAC1B,MAAM,QAAQ,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD,EAAE,cAAc;QAC3C,IAAI,YAAY,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS;aAC7C,IAAI,YAAY,WAAW,OAAO,CAAC,KAAK,EAAE,SAAS;aACnD,OAAO,CAAC,KAAK,EAAE,SAAS;IAC/B;IAGA,yBAAyB;IACzB,wEAAwE;IACxE,6BAA6B;IAC7B,IAAI;IAEJ,OAAO,SAAS,IAAI,EAAC;QACnB,sEAAsE;QACtE,2BAA2B;QAC3B,MAAM,IAAI,MAAM;IAClB;IAGA,SAAQ;QACN,OAAO;YACL,IAAI,IAAI,CAAC,CAAA,EAAG;YACZ,WAAW,IAAI,CAAC,CAAA,SAAU;YAC1B,UAAU,IAAI,CAAC,CAAA,QAAS;YACxB,UAAU,IAAI,CAAC,CAAA,QAAS;YACxB,UAAU,IAAI,CAAC,CAAA,QAAS;YACxB,UAAU,IAAI,CAAC,CAAA,QAAS;QAC1B;IACF;IAEA,WAAW;QACT,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA,QAAS,CAAC;gBACvB,EAAE,IAAI,CAAC,CAAA,EAAG,CAAC;uBACJ,EAAE,IAAI,CAAC,CAAA,SAAU,CAAC;sBACnB,EAAE,IAAI,CAAC,CAAA,QAAS,CAAC;sBACjB,EAAE,IAAI,CAAC,CAAA,QAAS,CAAC,CAAC,CAAC;IACvC;AAEF","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/models/student-course.js"],"sourcesContent":["// StudentCourse.js\nexport class StudentCourse {\n    #crn;\n    #course_id;\n    #status;\n    #grade;\n\n    constructor(obj) {\n        this.#crn = obj?.crn ?? \"\";\n        this.#course_id = obj?.course_id ?? \"\";\n        this.#status = obj?.status ?? \"pending\"; \n        this.#grade = obj?.grade ?? \"N/A\"; \n    }\n\n    // Getters and setters\n    get crn() {\n        return this.#crn;\n      }\n    \n      set crn(value) {\n        this.#crn = value;\n      }\n    \n      get course_id() {\n        return this.#course_id;\n      }\n    \n      set course_id(value) {\n        this.#course_id = value;\n      }\n    \n      get status() {\n        return this.#status;\n      }\n    \n      set status(value) {\n        this.#status = value;\n      }\n    \n      get grade() {\n        return this.#grade;\n      }\n    \n      set grade(value) {\n        this.#grade = value;\n      }\n\n    static fromJSON(json) {\n      const object = typeof json === \"string\" ? JSON.parse(json) : json;\n        return new StudentCourse(object);\n    }\n  \n    toJSON() {\n      return {\n        crn: this.#crn,\n        course_id: this.#course_id,\n        status: this.#status,\n        grade: this.#grade\n      }\n    }\n    toString() {\n        return `StudentCourse {crn: ${this.#crn}, course_id: ${this.#course_id}, status: ${this.#status}, grade: ${this.#grade || 'N/A'}}`;\n      }\n      \n  }"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACZ,MAAM;IACT,CAAA,GAAI,CAAC;IACL,CAAA,SAAU,CAAC;IACX,CAAA,MAAO,CAAC;IACR,CAAA,KAAM,CAAC;IAEP,YAAY,GAAG,CAAE;QACb,IAAI,CAAC,CAAA,GAAI,GAAG,KAAK,OAAO;QACxB,IAAI,CAAC,CAAA,SAAU,GAAG,KAAK,aAAa;QACpC,IAAI,CAAC,CAAA,MAAO,GAAG,KAAK,UAAU;QAC9B,IAAI,CAAC,CAAA,KAAM,GAAG,KAAK,SAAS;IAChC;IAEA,sBAAsB;IACtB,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,CAAA,GAAI;IAClB;IAEA,IAAI,IAAI,KAAK,EAAE;QACb,IAAI,CAAC,CAAA,GAAI,GAAG;IACd;IAEA,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,CAAA,SAAU;IACxB;IAEA,IAAI,UAAU,KAAK,EAAE;QACnB,IAAI,CAAC,CAAA,SAAU,GAAG;IACpB;IAEA,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,CAAA,MAAO;IACrB;IAEA,IAAI,OAAO,KAAK,EAAE;QAChB,IAAI,CAAC,CAAA,MAAO,GAAG;IACjB;IAEA,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,CAAA,KAAM;IACpB;IAEA,IAAI,MAAM,KAAK,EAAE;QACf,IAAI,CAAC,CAAA,KAAM,GAAG;IAChB;IAEF,OAAO,SAAS,IAAI,EAAE;QACpB,MAAM,SAAS,OAAO,SAAS,WAAW,KAAK,KAAK,CAAC,QAAQ;QAC3D,OAAO,IAAI,cAAc;IAC7B;IAEA,SAAS;QACP,OAAO;YACL,KAAK,IAAI,CAAC,CAAA,GAAI;YACd,WAAW,IAAI,CAAC,CAAA,SAAU;YAC1B,QAAQ,IAAI,CAAC,CAAA,MAAO;YACpB,OAAO,IAAI,CAAC,CAAA,KAAM;QACpB;IACF;IACA,WAAW;QACP,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAA,GAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA,SAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA,MAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA,KAAM,IAAI,MAAM,CAAC,CAAC;IACpI;AAEJ","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/models/student.js"],"sourcesContent":["import { User } from \"./user.js\";\nimport { StudentCourse } from \"./student-course.js\";\n\nexport class Student extends User{\n  #courses;\n\n  constructor(obj){\n    super({...obj});\n    this.#courses = obj?.courses ?? [];\n  }\n\n  // SETTERS AND GETTERS\n  get courses(){\n    return this.#courses;\n  }\n  set courses(courses){\n    this.#courses = courses;\n  }\n\n  addCourse(obj){\n    const course = new StudentCourse(obj);\n    this.#courses.push(course);\n    return course;\n  }\n\n  // FROM JSON\n  static fromJSON(json){\n    const object = typeof json === \"string\" ? JSON.parse(json) : json; \n    return new Student(object);\n  }\n\n  // TO JSON\n  toJSON(){\n    return {\n      ...super.toJSON(),\n      courses: this.#courses\n    };\n  }\n\n  // TO STRING\n  toString() {\n    return `${super.toString()}, \n            courses: ${this.#courses.map(course => course.toString())}`;\n  }\n  \n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,gBAAgB,wHAAA,CAAA,OAAI;IAC/B,CAAA,OAAQ,CAAC;IAET,YAAY,GAAG,CAAC;QACd,KAAK,CAAC;YAAC,GAAG,GAAG;QAAA;QACb,IAAI,CAAC,CAAA,OAAQ,GAAG,KAAK,WAAW,EAAE;IACpC;IAEA,sBAAsB;IACtB,IAAI,UAAS;QACX,OAAO,IAAI,CAAC,CAAA,OAAQ;IACtB;IACA,IAAI,QAAQ,OAAO,EAAC;QAClB,IAAI,CAAC,CAAA,OAAQ,GAAG;IAClB;IAEA,UAAU,GAAG,EAAC;QACZ,MAAM,SAAS,IAAI,qIAAA,CAAA,gBAAa,CAAC;QACjC,IAAI,CAAC,CAAA,OAAQ,CAAC,IAAI,CAAC;QACnB,OAAO;IACT;IAEA,YAAY;IACZ,OAAO,SAAS,IAAI,EAAC;QACnB,MAAM,SAAS,OAAO,SAAS,WAAW,KAAK,KAAK,CAAC,QAAQ;QAC7D,OAAO,IAAI,QAAQ;IACrB;IAEA,UAAU;IACV,SAAQ;QACN,OAAO;YACL,GAAG,KAAK,CAAC,QAAQ;YACjB,SAAS,IAAI,CAAC,CAAA,OAAQ;QACxB;IACF;IAEA,YAAY;IACZ,WAAW;QACT,OAAO,GAAG,KAAK,CAAC,WAAW;qBACV,EAAE,IAAI,CAAC,CAAA,OAAQ,CAAC,GAAG,CAAC,CAAA,SAAU,OAAO,QAAQ,KAAK;IACrE;AAEF","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/models/instructor.js"],"sourcesContent":["import {User} from './user.js';\n\nexport class Instructor extends User{\n  #expertise_area;\n  #assigned_classes;\n\n  constructor(obj){\n    super({...obj});\n    this.#expertise_area = obj?.expertise_area ?? [];\n    this.#assigned_classes = obj?.assigned_classes ?? [];\n  }\n\n  // SETTERS AND GETTERS\n  get expertise_area(){\n    return this.#expertise_area;\n  }\n  get assigned_classes(){\n    return this.#assigned_classes;\n  }\n  set expertise_area(expertise_area){\n    this.#expertise_area = expertise_area;\n  }\n  set assigned_classes(assigned_classes){\n    this.#assigned_classes = assigned_classes;\n  }\n\n  // FROM JSON\n  static fromJSON(json){\n    const object = typeof json === \"string\" ? JSON.parse(json) : json; \n    return new Instructor(object);\n  }\n\n  // TO JSON\n  toJSON(){\n    return {\n      ...super.toJSON(),\n      expertise_area: this.#expertise_area,\n      assigned_classes: this.#assigned_classes\n    };\n  }\n\n  // TO STRING\n  toString() {\n    return `${super.toString()}, \n            Expertise Area: ${this.#expertise_area},\n            Assigned Classes: ${this.#assigned_classes},`;\n  }\n\n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,mBAAmB,wHAAA,CAAA,OAAI;IAClC,CAAA,cAAe,CAAC;IAChB,CAAA,gBAAiB,CAAC;IAElB,YAAY,GAAG,CAAC;QACd,KAAK,CAAC;YAAC,GAAG,GAAG;QAAA;QACb,IAAI,CAAC,CAAA,cAAe,GAAG,KAAK,kBAAkB,EAAE;QAChD,IAAI,CAAC,CAAA,gBAAiB,GAAG,KAAK,oBAAoB,EAAE;IACtD;IAEA,sBAAsB;IACtB,IAAI,iBAAgB;QAClB,OAAO,IAAI,CAAC,CAAA,cAAe;IAC7B;IACA,IAAI,mBAAkB;QACpB,OAAO,IAAI,CAAC,CAAA,gBAAiB;IAC/B;IACA,IAAI,eAAe,cAAc,EAAC;QAChC,IAAI,CAAC,CAAA,cAAe,GAAG;IACzB;IACA,IAAI,iBAAiB,gBAAgB,EAAC;QACpC,IAAI,CAAC,CAAA,gBAAiB,GAAG;IAC3B;IAEA,YAAY;IACZ,OAAO,SAAS,IAAI,EAAC;QACnB,MAAM,SAAS,OAAO,SAAS,WAAW,KAAK,KAAK,CAAC,QAAQ;QAC7D,OAAO,IAAI,WAAW;IACxB;IAEA,UAAU;IACV,SAAQ;QACN,OAAO;YACL,GAAG,KAAK,CAAC,QAAQ;YACjB,gBAAgB,IAAI,CAAC,CAAA,cAAe;YACpC,kBAAkB,IAAI,CAAC,CAAA,gBAAiB;QAC1C;IACF;IAEA,YAAY;IACZ,WAAW;QACT,OAAO,GAAG,KAAK,CAAC,WAAW;4BACH,EAAE,IAAI,CAAC,CAAA,cAAe,CAAC;8BACrB,EAAE,IAAI,CAAC,CAAA,gBAAiB,CAAC,CAAC,CAAC;IACvD;AAEF","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/models/department-administrator.js"],"sourcesContent":["import { User } from './user.js';\n\nexport class Admin extends User {\n\n  constructor(obj){\n    super({...obj});\n  }\n\n  // From JSON\n  static fromJSON(json){\n    const object = typeof json === \"string\" ? JSON.parse(json) : json; \n    return new Admin(object);\n  }\n\n  // TO JSON\n  toJSON(){\n    return {\n      ...super.toJSON()\n    };\n  }\n\n  // TO STRING\n  toString() {\n    return `${super.toString()}`;\n  }\n\n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,wHAAA,CAAA,OAAI;IAE7B,YAAY,GAAG,CAAC;QACd,KAAK,CAAC;YAAC,GAAG,GAAG;QAAA;IACf;IAEA,YAAY;IACZ,OAAO,SAAS,IAAI,EAAC;QACnB,MAAM,SAAS,OAAO,SAAS,WAAW,KAAK,KAAK,CAAC,QAAQ;QAC7D,OAAO,IAAI,MAAM;IACnB;IAEA,UAAU;IACV,SAAQ;QACN,OAAO;YACL,GAAG,KAAK,CAAC,QAAQ;QACnB;IACF;IAEA,YAAY;IACZ,WAAW;QACT,OAAO,GAAG,KAAK,CAAC,YAAY;IAC9B;AAEF","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/users.js"],"sourcesContent":["import { promises as fs } from \"fs\";\nimport { nanoid } from \"nanoid\";\nimport { User } from \"./models/user.js\";\nimport { Student } from \"./models/student.js\";\nimport { Instructor } from \"./models/instructor.js\";\nimport { Admin } from \"./models/department-administrator.js\";\n\nexport async function load(){\n    try{\n        const users = await fs.readFile(\"./repo/data/users.json\");\n        const parsedUsers = JSON.parse(users);\n        return parsedUsers.map(user => {\n            switch (user.userType) {\n                case \"student\":\n                    return Student.fromJSON(user);\n                case \"instructor\":\n                    return Instructor.fromJSON(user);\n                case \"admin\":\n                    return Admin.fromJSON(user);\n            }\n        })\n    }\n    catch(e){\n        console.error(\"Error reading users file:\", e);\n    }\n}\n\nexport async function save(users){\n    try {\n        console.log(users.map(user => user.toString()));\n        await fs.writeFile(\"./repo/data/users.json\", JSON.stringify(users.map(user => user.toJSON() )));\n      } catch (e) {\n        console.error(e);\n      }\n}\n\nexport async function read(id){\n    const users = await load();\n    if(id){\n        const user = users.find((user) => user.id == id);\n        if(!user){\n            throw new Error(`User with id ${id} not found`);\n        }\n        return user;\n    }\n    return users;\n}\n\nexport async function create(body){\n    const users = await load();\n    const duplicate = users.find((user) => user.id == body.id);\n\n    if(duplicate){\n        throw new Error(`User with id ${body.id} already exists`);\n    }\n    let user;\n    console.log(body.userType);\n    switch (body.userType) {\n        case \"student\":\n             user = Student.fromJSON(user);\n             break;\n        case \"instructor\":\n             user = Instructor.fromJSON(user);\n             break;\n        case \"admin\":\n             user = Admin.fromJSON(user);\n             break;\n    }\n    console.log(user);\n    users.push(user);\n\n    await save(users);\n    return user;\n}  \n\nexport async function update(id, user){\n    const users = await load();\n    const index = users.findIndex((user) => user.id == id);\n    if(index === -1){\n        throw new Error(`User with id ${id} not found`);\n    }\n    // users[index] = { ...users[index], ...user };\n    const { id: _, ...rest } = user;\n    Object.assign(users[index], rest);\n    \n    await save(users);\n    // console.log(users[index]);\n    return users[index];\n}\n\nexport async function remove(id){\n    const users = await load();\n    const index = users.findIndex((user) => user.id == id);\n    if(index === -1){\n        throw new Error(`User with id ${id} not found`);\n    }\n    users.splice(index, 1);\n\n    await save(users);\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AAEO,eAAe;IAClB,IAAG;QACC,MAAM,QAAQ,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC;QAChC,MAAM,cAAc,KAAK,KAAK,CAAC;QAC/B,OAAO,YAAY,GAAG,CAAC,CAAA;YACnB,OAAQ,KAAK,QAAQ;gBACjB,KAAK;oBACD,OAAO,2HAAA,CAAA,UAAO,CAAC,QAAQ,CAAC;gBAC5B,KAAK;oBACD,OAAO,8HAAA,CAAA,aAAU,CAAC,QAAQ,CAAC;gBAC/B,KAAK;oBACD,OAAO,+IAAA,CAAA,QAAK,CAAC,QAAQ,CAAC;YAC9B;QACJ;IACJ,EACA,OAAM,GAAE;QACJ,QAAQ,KAAK,CAAC,6BAA6B;IAC/C;AACJ;AAEO,eAAe,KAAK,KAAK;IAC5B,IAAI;QACA,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,QAAQ;QAC3C,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,0BAA0B,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;IAC3F,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC;IAChB;AACN;AAEO,eAAe,KAAK,EAAE;IACzB,MAAM,QAAQ,MAAM;IACpB,IAAG,IAAG;QACF,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,IAAI;QAC7C,IAAG,CAAC,MAAK;YACL,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,GAAG,UAAU,CAAC;QAClD;QACA,OAAO;IACX;IACA,OAAO;AACX;AAEO,eAAe,OAAO,IAAI;IAC7B,MAAM,QAAQ,MAAM;IACpB,MAAM,YAAY,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,IAAI,KAAK,EAAE;IAEzD,IAAG,WAAU;QACT,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE,CAAC,eAAe,CAAC;IAC5D;IACA,IAAI;IACJ,QAAQ,GAAG,CAAC,KAAK,QAAQ;IACzB,OAAQ,KAAK,QAAQ;QACjB,KAAK;YACA,OAAO,2HAAA,CAAA,UAAO,CAAC,QAAQ,CAAC;YACxB;QACL,KAAK;YACA,OAAO,8HAAA,CAAA,aAAU,CAAC,QAAQ,CAAC;YAC3B;QACL,KAAK;YACA,OAAO,+IAAA,CAAA,QAAK,CAAC,QAAQ,CAAC;YACtB;IACT;IACA,QAAQ,GAAG,CAAC;IACZ,MAAM,IAAI,CAAC;IAEX,MAAM,KAAK;IACX,OAAO;AACX;AAEO,eAAe,OAAO,EAAE,EAAE,IAAI;IACjC,MAAM,QAAQ,MAAM;IACpB,MAAM,QAAQ,MAAM,SAAS,CAAC,CAAC,OAAS,KAAK,EAAE,IAAI;IACnD,IAAG,UAAU,CAAC,GAAE;QACZ,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,GAAG,UAAU,CAAC;IAClD;IACA,+CAA+C;IAC/C,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;IAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;IAE5B,MAAM,KAAK;IACX,6BAA6B;IAC7B,OAAO,KAAK,CAAC,MAAM;AACvB;AAEO,eAAe,OAAO,EAAE;IAC3B,MAAM,QAAQ,MAAM;IACpB,MAAM,QAAQ,MAAM,SAAS,CAAC,CAAC,OAAS,KAAK,EAAE,IAAI;IACnD,IAAG,UAAU,CAAC,GAAE;QACZ,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,GAAG,UAAU,CAAC;IAClD;IACA,MAAM,MAAM,CAAC,OAAO;IAEpB,MAAM,KAAK;AACf","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/app/users/route.js"],"sourcesContent":["import * as repo from \"@/repo/users.js\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET() {\n    try{\n        const users = await repo.read();\n        return NextResponse.json(users.map(user => user.toJSON()), {status: 200});\n    }\n    catch(e){\n        console.error(e);\n        return NextResponse.json({ message: \"Error\" }, { status: 500 });\n    }\n}\n\nexport async function POST(request, {params}){\n    try{\n        let user;\n        try{\n            user = await request.json();\n        }\n        catch(e){\n            return new NextResponse(\"Invalid request\", { status: 400 });\n        }\n        try{\n            user = await repo.create(user);\n        }\n        catch(e){\n            return NextResponse.json({ message: \"Conflict\" }, { status: 409 });\n        }\n        return NextResponse.json(user.toJSON(), { status: 201 });\n    }\n    catch(e){\n        console.error(e);\n        return NextResponse.json({ message: \"Error\" }, { status: 500 });\n    }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IAClB,IAAG;QACC,MAAM,QAAQ,MAAM,CAAA,GAAA,+GAAA,CAAA,OAAS,AAAD;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK;YAAC,QAAQ;QAAG;IAC3E,EACA,OAAM,GAAE;QACJ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAQ,GAAG;YAAE,QAAQ;QAAI;IACjE;AACJ;AAEO,eAAe,KAAK,OAAO,EAAE,EAAC,MAAM,EAAC;IACxC,IAAG;QACC,IAAI;QACJ,IAAG;YACC,OAAO,MAAM,QAAQ,IAAI;QAC7B,EACA,OAAM,GAAE;YACJ,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,mBAAmB;gBAAE,QAAQ;YAAI;QAC7D;QACA,IAAG;YACC,OAAO,MAAM,CAAA,GAAA,+GAAA,CAAA,SAAW,AAAD,EAAE;QAC7B,EACA,OAAM,GAAE;YACJ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAW,GAAG;gBAAE,QAAQ;YAAI;QACpE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,KAAK,MAAM,IAAI;YAAE,QAAQ;QAAI;IAC1D,EACA,OAAM,GAAE;QACJ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAQ,GAAG;YAAE,QAAQ;QAAI;IACjE;AACJ","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/models/course.js"],"sourcesContent":["\nexport class Course{\n  #id;\n  #name;\n  #credit_hours;\n  #category;\n  #prerequisites;\n  #campus; \n  #status;\n\n  constructor(obj){\n    this.#id = obj?.id;\n    this.#name = obj?.name ?? \"\";\n    this.#credit_hours = obj?.credit_hours ?? 0;\n    this.#category = obj?.category ?? \"\";\n    this.#prerequisites = obj?.prerequisites ?? [];\n    this.#campus = obj?.campus ?? \"\";\n    this.#status = obj?.status ?? \"\";\n  }\n\n  get id(){\n    return this.#id;\n  }\n\n  get name(){\n    return this.#name;\n  }\n\n  get credit_hours(){\n    return this.#credit_hours;\n  }\n\n  get category(){\n    return this.#category;\n  }\n  \n  get prerequisites(){\n    return this.#prerequisites;\n  }\n\n  get campus(){\n    return this.#campus;\n  }\n\n  get status(){\n    return this.#status;\n  }\n\n  set id(value){\n    this.#id = value;\n  }\n\n  set name(value){\n\n    this.#name = value;\n\n  }\n\n  set credit_hours(value){\n    this.#credit_hours = value;\n  }\n\n  set category(value){\n    this.#category = value;\n  }\n\n  set prerequisites(value){\n    this.#prerequisites = value;\n  }\n\n  set campus(value){\n    this.#campus = value;\n  }\n\n  set status(value){\n    this.#status = value;\n  }\n\n  static fromJSON(json){\n    const object = typeof json === \"string\" ? JSON.parse(json) : json; \n    return new Course(object);\n  }\n\n  toJSON(){\n    return {\n      id: this.#id,\n      name: this.#name,\n      credit_hours: this.#credit_hours,\n      category: this.#category,\n      prerequisites: this.#prerequisites,\n      campus: this.#campus,\n      status: this.#status\n    };\n  }\n\n  toString(){\n    return `Course -\n      ID: ${this.#id}, \n      Name: ${this.#name}, \n      Credit Hours: ${this.#credit_hours},\n      Category: ${this.#category},\n      Prerequisites: ${this.#prerequisites},\n      Campus: ${this.#campus},`;\n  }\n}"],"names":[],"mappings":";;;AACO,MAAM;IACX,CAAA,EAAG,CAAC;IACJ,CAAA,IAAK,CAAC;IACN,CAAA,YAAa,CAAC;IACd,CAAA,QAAS,CAAC;IACV,CAAA,aAAc,CAAC;IACf,CAAA,MAAO,CAAC;IACR,CAAA,MAAO,CAAC;IAER,YAAY,GAAG,CAAC;QACd,IAAI,CAAC,CAAA,EAAG,GAAG,KAAK;QAChB,IAAI,CAAC,CAAA,IAAK,GAAG,KAAK,QAAQ;QAC1B,IAAI,CAAC,CAAA,YAAa,GAAG,KAAK,gBAAgB;QAC1C,IAAI,CAAC,CAAA,QAAS,GAAG,KAAK,YAAY;QAClC,IAAI,CAAC,CAAA,aAAc,GAAG,KAAK,iBAAiB,EAAE;QAC9C,IAAI,CAAC,CAAA,MAAO,GAAG,KAAK,UAAU;QAC9B,IAAI,CAAC,CAAA,MAAO,GAAG,KAAK,UAAU;IAChC;IAEA,IAAI,KAAI;QACN,OAAO,IAAI,CAAC,CAAA,EAAG;IACjB;IAEA,IAAI,OAAM;QACR,OAAO,IAAI,CAAC,CAAA,IAAK;IACnB;IAEA,IAAI,eAAc;QAChB,OAAO,IAAI,CAAC,CAAA,YAAa;IAC3B;IAEA,IAAI,WAAU;QACZ,OAAO,IAAI,CAAC,CAAA,QAAS;IACvB;IAEA,IAAI,gBAAe;QACjB,OAAO,IAAI,CAAC,CAAA,aAAc;IAC5B;IAEA,IAAI,SAAQ;QACV,OAAO,IAAI,CAAC,CAAA,MAAO;IACrB;IAEA,IAAI,SAAQ;QACV,OAAO,IAAI,CAAC,CAAA,MAAO;IACrB;IAEA,IAAI,GAAG,KAAK,EAAC;QACX,IAAI,CAAC,CAAA,EAAG,GAAG;IACb;IAEA,IAAI,KAAK,KAAK,EAAC;QAEb,IAAI,CAAC,CAAA,IAAK,GAAG;IAEf;IAEA,IAAI,aAAa,KAAK,EAAC;QACrB,IAAI,CAAC,CAAA,YAAa,GAAG;IACvB;IAEA,IAAI,SAAS,KAAK,EAAC;QACjB,IAAI,CAAC,CAAA,QAAS,GAAG;IACnB;IAEA,IAAI,cAAc,KAAK,EAAC;QACtB,IAAI,CAAC,CAAA,aAAc,GAAG;IACxB;IAEA,IAAI,OAAO,KAAK,EAAC;QACf,IAAI,CAAC,CAAA,MAAO,GAAG;IACjB;IAEA,IAAI,OAAO,KAAK,EAAC;QACf,IAAI,CAAC,CAAA,MAAO,GAAG;IACjB;IAEA,OAAO,SAAS,IAAI,EAAC;QACnB,MAAM,SAAS,OAAO,SAAS,WAAW,KAAK,KAAK,CAAC,QAAQ;QAC7D,OAAO,IAAI,OAAO;IACpB;IAEA,SAAQ;QACN,OAAO;YACL,IAAI,IAAI,CAAC,CAAA,EAAG;YACZ,MAAM,IAAI,CAAC,CAAA,IAAK;YAChB,cAAc,IAAI,CAAC,CAAA,YAAa;YAChC,UAAU,IAAI,CAAC,CAAA,QAAS;YACxB,eAAe,IAAI,CAAC,CAAA,aAAc;YAClC,QAAQ,IAAI,CAAC,CAAA,MAAO;YACpB,QAAQ,IAAI,CAAC,CAAA,MAAO;QACtB;IACF;IAEA,WAAU;QACR,OAAO,CAAC;UACF,EAAE,IAAI,CAAC,CAAA,EAAG,CAAC;YACT,EAAE,IAAI,CAAC,CAAA,IAAK,CAAC;oBACL,EAAE,IAAI,CAAC,CAAA,YAAa,CAAC;gBACzB,EAAE,IAAI,CAAC,CAAA,QAAS,CAAC;qBACZ,EAAE,IAAI,CAAC,CAAA,aAAc,CAAC;cAC7B,EAAE,IAAI,CAAC,CAAA,MAAO,CAAC,CAAC,CAAC;IAC7B;AACF","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/repo/courses.js"],"sourcesContent":["import { promises as fs } from \"fs\";\nimport { nanoid } from \"nanoid\";\nimport { Course } from \"./models/course.js\";\n\nexport async function load(){\n    try{\n        const courses = await fs.readFile(\"./repo/data/courses.json\");\n        const parsedCourses = JSON.parse(courses);\n        return parsedCourses.map(course => Course.fromJSON(course));\n    }\n    catch(e){\n        console.error(\"Error reading courses file:\", e);\n    }\n}\n\nexport async function save(courses){\n    try {\n        // console.log(courses.map(course => course.toString()));\n        await fs.writeFile(\"./repo/data/courses.json\", JSON.stringify(courses.map(course => course.toJSON() )));\n      } catch (e) {\n        console.error(e);\n      }\n}\n\nexport async function read(id){\n    const courses = await load();\n    if(id){\n        const course = courses.find((course) => course.id == id);\n        if(!course){\n            throw new Error(`Course with id ${id} not found`);\n        }\n        return course;\n    }\n    return courses;\n}\n\nexport async function create(body){\n    const courses = await load();\n    const duplicate = courses.find((course) => course.id == body.id);\n\n    if(duplicate){\n        throw new Error(`Course with id ${body.id} already exists`);\n    }\n    let course = Course.fromJSON(body);\n    // console.log(body.userType);\n    \n    // console.log(user);\n    courses.push(course);\n\n    await save(courses);\n    return course;\n}  \n\nexport async function update(id, course){\n    const courses = await load();\n    const index = courses.findIndex((course) => course.id == id);\n    if(index === -1){\n        throw new Error(`Courses with id ${id} not found`);\n    }\n   \n    Object.assign(courses[index], course);\n    \n    await save(courses);\n    return courses[index];\n}\n\nexport async function remove(id){\n    const courses = await load();\n    const index = courses.findIndex((course) => course.id == id);\n    if(index === -1){\n        throw new Error(`Course with id ${id} not found`);\n    }\n    courses.splice(index, 1);\n\n    await save(courses);\n}\n\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA;;;;AAEO,eAAe;IAClB,IAAG;QACC,MAAM,UAAU,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC;QAClC,MAAM,gBAAgB,KAAK,KAAK,CAAC;QACjC,OAAO,cAAc,GAAG,CAAC,CAAA,SAAU,0HAAA,CAAA,SAAM,CAAC,QAAQ,CAAC;IACvD,EACA,OAAM,GAAE;QACJ,QAAQ,KAAK,CAAC,+BAA+B;IACjD;AACJ;AAEO,eAAe,KAAK,OAAO;IAC9B,IAAI;QACA,yDAAyD;QACzD,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,4BAA4B,KAAK,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAA,SAAU,OAAO,MAAM;IACnG,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC;IAChB;AACN;AAEO,eAAe,KAAK,EAAE;IACzB,MAAM,UAAU,MAAM;IACtB,IAAG,IAAG;QACF,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,SAAW,OAAO,EAAE,IAAI;QACrD,IAAG,CAAC,QAAO;YACP,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,GAAG,UAAU,CAAC;QACpD;QACA,OAAO;IACX;IACA,OAAO;AACX;AAEO,eAAe,OAAO,IAAI;IAC7B,MAAM,UAAU,MAAM;IACtB,MAAM,YAAY,QAAQ,IAAI,CAAC,CAAC,SAAW,OAAO,EAAE,IAAI,KAAK,EAAE;IAE/D,IAAG,WAAU;QACT,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,KAAK,EAAE,CAAC,eAAe,CAAC;IAC9D;IACA,IAAI,SAAS,0HAAA,CAAA,SAAM,CAAC,QAAQ,CAAC;IAC7B,8BAA8B;IAE9B,qBAAqB;IACrB,QAAQ,IAAI,CAAC;IAEb,MAAM,KAAK;IACX,OAAO;AACX;AAEO,eAAe,OAAO,EAAE,EAAE,MAAM;IACnC,MAAM,UAAU,MAAM;IACtB,MAAM,QAAQ,QAAQ,SAAS,CAAC,CAAC,SAAW,OAAO,EAAE,IAAI;IACzD,IAAG,UAAU,CAAC,GAAE;QACZ,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,GAAG,UAAU,CAAC;IACrD;IAEA,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE;IAE9B,MAAM,KAAK;IACX,OAAO,OAAO,CAAC,MAAM;AACzB;AAEO,eAAe,OAAO,EAAE;IAC3B,MAAM,UAAU,MAAM;IACtB,MAAM,QAAQ,QAAQ,SAAS,CAAC,CAAC,SAAW,OAAO,EAAE,IAAI;IACzD,IAAG,UAAU,CAAC,GAAE;QACZ,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,GAAG,UAAU,CAAC;IACpD;IACA,QAAQ,MAAM,CAAC,OAAO;IAEtB,MAAM,KAAK;AACf","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///Users/arwaelaradi/Documents/GitHub/WebProject/Project/app/courses/route.js"],"sourcesContent":["import * as repo from \"@/repo/courses.js\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET() {\n    try{\n        const courses = await repo.read();\n        return NextResponse.json(courses.map(course => course.toJSON()), {status: 200});\n    }\n    catch(e){\n        console.error(e);\n        return NextResponse.json({ message: \"Error\" }, { status: 500 });\n    }\n}\n\nexport async function POST(request, {params}){\n    try{\n        let course;\n        try{\n            course = await request.json();\n        }\n        catch(e){\n            return new NextResponse(\"Invalid request\", { status: 400 });\n        }\n        try{\n            course = await repo.create(course);\n        }\n        catch(e){\n            return NextResponse.json({ message: \"Conflict\" }, { status: 409 });\n        }\n        return NextResponse.json(course.toJSON(), { status: 201 });\n    }\n    catch(e){\n        console.error(e);\n        return NextResponse.json({ message: \"Error\" }, { status: 500 });\n    }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IAClB,IAAG;QACC,MAAM,UAAU,MAAM,CAAA,GAAA,iHAAA,CAAA,OAAS,AAAD;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA,SAAU,OAAO,MAAM,KAAK;YAAC,QAAQ;QAAG;IACjF,EACA,OAAM,GAAE;QACJ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAQ,GAAG;YAAE,QAAQ;QAAI;IACjE;AACJ;AAEO,eAAe,KAAK,OAAO,EAAE,EAAC,MAAM,EAAC;IACxC,IAAG;QACC,IAAI;QACJ,IAAG;YACC,SAAS,MAAM,QAAQ,IAAI;QAC/B,EACA,OAAM,GAAE;YACJ,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,mBAAmB;gBAAE,QAAQ;YAAI;QAC7D;QACA,IAAG;YACC,SAAS,MAAM,CAAA,GAAA,iHAAA,CAAA,SAAW,AAAD,EAAE;QAC/B,EACA,OAAM,GAAE;YACJ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAW,GAAG;gBAAE,QAAQ;YAAI;QACpE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,MAAM,IAAI;YAAE,QAAQ;QAAI;IAC5D,EACA,OAAM,GAAE;QACJ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAQ,GAAG;YAAE,QAAQ;QAAI;IACjE;AACJ","debugId":null}}]
}